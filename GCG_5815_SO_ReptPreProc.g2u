Program.Sub.Preflight.Start
Program.Sub.Preflight.End

Program.Sub.Main.Start

'This project was created for Monti on Dec 27, 2019 by FEQ
'The user just wants a simple report that prints the Sales Order number, customer number, and user that created the Sales Order.
'They are potentially interested in having it done in CodeSoft, but they do not have it available at this time.
'We are also creating a 'reprint' process for them on the OPEN SO screen

'Populate hook for the Sales Order screen is 11560. If they are in Open mode, we want to make an additional custom button visible and label it 'Reprint SO'
F.Intrinsic.Control.Try
V.Local.sError.Declare(String, "")

F.Intrinsic.Control.SelectCase(V.Caller.Hook)
	F.Intrinsic.Control.Case(11560)
		'Populate hook on the SO Header screen
		F.Intrinsic.Control.If(V.Caller.Switches.UCase, =, "O")
			'Moving GAB Button (GAB-BTN-1)next to where the SCRIPT 3 button is
			F.Intrinsic.UI.ChangeCallerProperty(Variable.Passed.GAB-BTN-1, "HIDE", 0)
			F.Intrinsic.UI.ChangeCallerProperty(Variable.Passed.GAB-BTN-1, "LOCK", 0)
			F.Intrinsic.Variable.SetProperty("GAB-BTN-1", "PL", 284)
			F.Intrinsic.Variable.SetProperty("GAB-BTN-1", "PT", 672)
			F.Intrinsic.Variable.SetProperty("GAB-BTN-1", "PH", 24)
			F.Intrinsic.Variable.SetProperty("GAB-BTN-1", "PW", 95)
			V.Passed.GAB-BTN-1.Set("Reprint BarCode")
			
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Case(11872)
		'Save button on the SO Header screen. Might need to use 11870
		F.ODBC.Connection!conx.OpenCompanyConnection
		F.Intrinsic.Control.CallSub(SaveInfo, "User", V.Caller.User)
		F.ODBC.Connection!conx.Close
		
	F.Intrinsic.Control.Case(11950)
		F.Intrinsic.Control.If(V.Passed.000003.Trim, <>, "")
			'Custom GAB 1 button on the SO Header screen
			F.ODBC.Connection!conx.OpenCompanyConnection
			F.Intrinsic.Control.CallSub(CheckDB)
			F.ODBC.Connection!conx.Close
		F.Intrinsic.Control.EndIf
		
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.Unload.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare(String, "")

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndTry
Program.Sub.Unload.End

Program.Sub.SaveInfo.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare(String, "")
V.Local.sOrdNo.Declare(String, "")
V.Local.sQuery.Declare(String, "")
V.Local.sRetrn.Declare(String, "")
V.Local.sCName.Declare(String, "")
V.Local.sUName.Declare(String, "")
V.Local.iBiRID.Declare(Long, 0)
V.Local.iRptID.Declare(Long, 0)
V.Local.iLogID.Declare(Long, 0)

'Grab the data from the screen and save it to the DataBase. Make sure the data is not in saved in there, otherwise it is no longer a 'new' label and would need to be reprinted from the open screen
F.Intrinsic.String.LPad(V.Passed.000003, "0", 7, V.Local.sOrdNo)

F.Intrinsic.String.Build("Select LABEL_ID, SALES_ORDER_NO, CUSTOMER_NO, CUSTOMER_NAME, CREATE_USER, CREATE_USER_NAME, BI_RUN_ID FROM GCG_5815_SO_LABEL where SALES_ORDER_NO = '{0}'", V.Local.sOrdNo, V.Local.sQuery)

F.ODBC.Connection!conx.OpenLocalRecordsetRW("rstOrd", V.Local.sQuery)
'If we dont find anything, we create the entry and print, otherwise we exit.
F.Intrinsic.Control.If(V.ODBC.conx!rstOrd.EOF, =, True)
	
	F.Global.BI.GetRunID(V.Local.iBiRID)
	
	F.Global.BI.GetIDFromName("GCG_5815_SO_Label.rpt",V.Local.iRptID)
	
	F.Global.BI.StartLogging(V.Local.iBiRID,V.Local.iRptID,0,"",V.Local.iLogID)
	
	F.Intrinsic.String.Build("Select Top 1 NAME_CUSTOMER from V_CUSTOMER_MASTER where CUSTOMER = '{0}'", V.Passed.000006, V.Local.sQuery)
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sQuery, V.Local.sCName)
	
	F.Global.Security.GetFullName(V.Args.User, V.Local.sUName)
	
	
	F.ODBC.conx!rstOrd.AddNew
	F.ODBC.conx!rstOrd.Set!SALES_ORDER_NO(V.Local.sOrdNo)
	F.ODBC.conx!rstOrd.Set!CUSTOMER_NO(V.Passed.000006)
	F.ODBC.conx!rstOrd.Set!CUSTOMER_NAME(V.Local.sCName)
	F.ODBC.conx!rstOrd.Set!CREATE_USER(V.Args.User)
	F.ODBC.conx!rstOrd.Set!CREATE_USER_NAME(V.Local.sUName)
	F.ODBC.conx!rstOrd.Set!BI_RUN_ID(V.Local.iBiRID)
	F.ODBC.conx!rstOrd.Update
	
	F.Global.BI.StopLogging(V.Local.iBiRID)
	
	F.Global.BI.RunReportPreProcessor(V.Local.iBiRID, V.Local.iLogID, "SALES_ORDER_NO", V.Local.sOrdNo, "", -1, False, "", -1, "", -1, "", "", V.Local.sRetrn)
	
F.Intrinsic.Control.EndIf

F.ODBC.conx!rstOrd.Close

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.EndTry
Program.Sub.SaveInfo.End

Program.Sub.CheckDB.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare(String, "")
V.Local.sOrdNo.Declare(String, "")
V.Local.sQuery.Declare(String, "")
V.Local.sRetrn.Declare(String, "")
V.Local.sCName.Declare(String, "")
V.Local.sUName.Declare(String, "")
V.Local.sAnswr.Declare(String, "")
V.Local.iBiRID.Declare(Long, 0)
V.Local.iRptID.Declare(Long, 0)
V.Local.iLogID.Declare(Long, 0)

'We want to make sure that the database has an entry for this order

F.Intrinsic.String.LPad(V.Passed.000003, "0", 7, V.Local.sOrdNo)

F.Intrinsic.String.Build("Select LABEL_ID, SALES_ORDER_NO, CUSTOMER_NO, CUSTOMER_NAME, CREATE_USER, CREATE_USER_NAME, BI_RUN_ID FROM GCG_5815_SO_LABEL where SALES_ORDER_NO = '{0}'", V.Local.sOrdNo, V.Local.sQuery)

F.ODBC.Connection!conx.OpenLocalRecordsetRW("rstEXT", V.Local.sQuery)
'If we dont find anything, we create the entry and print, otherwise we exit.
F.Intrinsic.Control.If(V.ODBC.conx!rstEXT.EOF, =, False)
	
	F.Global.BI.GetRunID(V.Local.iBiRID)
	
	F.Global.BI.GetIDFromName("GCG_5815_SO_Label.rpt",V.Local.iRptID)
	
	F.Global.BI.StartLogging(V.Local.iBiRID,V.Local.iRptID,0,"",V.Local.iLogID)
	
	F.ODBC.conx!rstEXT.Set!BI_RUN_ID(V.Local.iBiRID)
	F.ODBC.conx!rstEXT.Update
	
	F.Global.BI.StopLogging(V.Local.iBiRID)
	
	F.Global.BI.RunReportPreProcessor(V.Local.iBiRID, V.Local.iLogID, "SALES_ORDER_NO", V.Local.sOrdNo, "", -1, False, "", -1, "", -1, "", "", V.Local.sRetrn)
	
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox("No label record was found in the system. Would you like to generate one?", "MISSING DATA", 3, V.Local.sAnswr)
	F.Intrinsic.Control.If(V.Local.sAnswr.Long, =, 6)
		'call the new label stuff
		F.Intrinsic.Control.CallSub(SaveInfo, "User", V.Caller.User)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.ODBC.conx!rstEXT.Close
		
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.EndTry
Program.Sub.CheckDB.End